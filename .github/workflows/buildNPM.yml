# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: buildNPM CI

on:
  push:
    branches: [FOLIO-2913]

jobs:
  set-up:
    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          ref: FOLIO-2913
      - run: echo "Set up folio registry..."
      - run: yarn config set @folio:registry $FOLIO_REGISTRY
        env:
          FOLIO_REGISTRY: https://repository.folio.org/repository/npm-folio/
      - run: echo "Installing dependencies..."
      - run: yarn install
      - run: yarn list --pattern @folio
      - run: mkdir -p artifacts/yarn/
      - run: cp yarn.lock artifacts/yarn/yarn.lock
      - run: bzip2 artifacts/yarn/yarn.lock
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          ref: FOLIO-2913
      - run: echo "Set up folio registry..."
      - run: yarn config set @folio:registry $FOLIO_REGISTRY
        env:
          FOLIO_REGISTRY: https://repository.folio.org/repository/npm-folio/
      - run: yarn install
      - run: echo "Running Lint..."
      - run: mkdir -p ci
      - run: echo "<html><body><pre>" ci/lint.html
      - run: yarn lint 2>&1 >>  ci/lint.html
      - run: echo "</pre><body></html>" >> ci/lint.html
      - run: rm -rf ci
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          ref: FOLIO-2913
      - run: echo "Set up folio registry..."
      - run: yarn config set @folio:registry $FOLIO_REGISTRY
        env:
          FOLIO_REGISTRY: https://repository.folio.org/repository/npm-folio/
      - run: yarn install
      - run: echo "Running Test..."
      - run: xvfb-run --server-args="-screen 0 1024x768x24" yarn test $runTestOptions
        env:
          runTestOptions: ""
  sonarQube:
    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          ref: ${{ github.REF }}
      - run: echo "Sonarqube scan..."
      - uses: warchant/setup-sonar-scanner@v1
      - if: endsWith(github.REF, '/master') != true
        env:
          GITHUB_ACCESS_TOKEN: 6b0ebf62-3a12-4e6b-b77e-c45817b5791b
          lcovPath: artifacts/coverage
          lcovPath2: coverage
          scannerHome: Sonarqube-Scanner-4
          excludeFiles: ../docs/**,**/node_modules/**,**/examples/**,**/artifacts/**,**/ci/**,Jenkinsfile,**/LICENSE,**/*.css,**/*.md,**/*.json,**/tests/**,**/stories/*.js,**/test/**,**/.stories.js,**/resources/bigtest/interactors/**,**/resources/bigtest/network/**,**/*-test.js,**/*.test.js,**/*-spec.js,**/karma.conf.js,**/jest.config.js
      - run: git fetch --no-tags ${env.projUrl} +refs/heads/master:refs/remotes/origin/master
      - run: >
           $scannerHome/bin/sonar-scanner
          -Dsonar.organization=folio-org
          -Dsonar.projectKey=org.folio:${env.projectName}
          -Dsonar.projectName=${env.projectName}
          -Dsonar.branch.name=${{ github.REF }}
          -Dsonar.sources=.
          -Dsonar.language=js
          -Dsonar.exclusions=${excludeFiles}
          -Dsonar.javascript.lcov.reportPaths=${lcovPath}/lcov.info,${lcovPath2}/lcov.info
